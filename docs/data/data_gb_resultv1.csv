index,name,url,Специализация,Подвид,"Технологии, инструменты",Уровень сложности,summary,other
6144,Разработчик,https://gb.ru/geek_university/developer,"Разработчик — это максимально общее название специалистов, которые связаны с разработкой нового программного обеспечения, сайтов, платформ, экосистем, баз данных, технологических устройств и архитектуры. Они действуют в рамках своей роли в команде, но в целом способны сделать любой проект от стадии замысла до его реализации техническими средствами, Выберу в процессе обучения","Frontend,Backend,Fullstack,Ручное,Автоматизированное,Сбор и обработка данных,Визуализация данных,Анализ данных,Машинное обучение,Data Science,Нейронные сети,Искусственный интеллект","Java,Python,JavaScript,C++,C,TCP/IP,SQL,NoSQL,Linux,Git,HTML/CSS,Docker,Allure,Selenium,Unit,Power BI,Tableau,Amplitude,ANNs,GAN,и другие",Junior,"Станьте востребованным разработчиком. Вы изучите основы программирования и основные концепции компьютерных наук, цифровые технологии, операционные системы, программное обеспечение, базы данных, системы аналитики, языки программирования и многое другое. Познакомитесь с тестированием и системным анализом. На программе сможете сделать осознанный выбор специализации и технологий, прокачаться в выбранном направлении.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
"
6247,Инженер-программист C++,https://gb.ru/geek_university/developer/programmer/cpp,"Разработчик C++ создаёт программы, приложения, игры, операционные системы, драйверы и другое высоконагруженное программное обеспечение. Если вы хотите выжать максимум из любого «железа», программировать роботов, создать свою ОС, язык или другую мощную и жадную до ресурсов штуку — вам понадобится язык программирования С++, Программирование",Backend,"C++,Linux,STL,Cmake,QT,TCP/UDP,HTTP,Git",Junior,"Получите профессию инженера-программиста C++. Создавайте программы, игры, драйвера для устройств, приложения для встраиваемых систем, серверов и даже операционные системы. Изучите основы этого языка и на практике научитесь создавать веб - и мобильные приложения и реализовывать графические интерфейсы для работы, на которую вы сможете устроиться после 9 месяцев обучения.","Введение в программирование
Что такое программирование и языки программирования
Создаем и записываем свои первые алгоритмы
Базовые алгоритмы и массив как структура данных
Решаем задачи с массивами
Сложность и стоимость алгоритмов
Сравниваем разные алгоритмы решения задач
Аттестация по теме
Введение в контроль версий
Знакомство с контролем версий
Первое использование контроля версий
Установка и настройка системы контроля версий
Второе использование контроля версий
Углубляемся в контроль версий
Работа с удаленными репозиториями
Аттестация по теме
Знакомство с языками программирования
Знакомство с языком программирования C#
Знакомство с функциями и массивами
Базовые алгоритмы
Функции
Функции и одномерные массивы
Рекурсия и двумерные массивы
Одномерные массивы
Как не нужно писать код: основные рекомендации
Как не нужно писать код: принципы и антипаттерны
Двумерные массивы
Рекурсия
C#: от простого к практике
Аттестация по теме
Знакомство с базами данных
SQL, Google Sheets, MS Excel
Работа с данными из разных таблиц
Создание структуры базы данных
Аттестация по теме
Специализация
7 месяцев

Знакомство с языком Python
Знакомство с языком программирования Python
Ввод-Вывод, операторы ветвления
Циклы (for, while)
Коллекции данных, профилирование и отладка кода
Списки и словари
Словари, множества и профилирование
Функции, рекурсия, алгоритмы
Рекурсия и алгоритмы
Повторение списков
Функции высшего порядка, работа с файлами
Работа с файлами
Google Colab (Jupyter). Знакомство с аналитикой
Работа с табличными данными
Построение графиков
Java: знакомство и как пользоваться базовым API
Знакомство с языком программирования Java
Почему вы не можете не использовать API
Коллекции Java: Введение
Хранение и обработка данных ч.1: приоритетные коллекции
Хранение и обработка данных ч.2: множество коллекций Map
Хранение и обработка данных ч.3: множество коллекций Set
Объектно-ориентированное программирование (ООП)
Введение в ООП. Свои типы и концепты
Принципы ООП: Инкапсуляция, наследование, полиморфизм
Принципы ООП Абстракция и интерфейсы. Пример проектирования
Некоторые стандартные интерфейсы Java и примеры их использования
ООП: Обобщения
ООП: От простого к практике
ООП: Дизайн и Solid ч.1
ООП: Дизайн и Solid ч.2
Аттестация по теме
⦿ Промежуточная аттестация
Исключения в программировании и их обработка
Обработка ошибок в программировании
Исключения и их обработка
Продвинутая работа с исключениями в Java
Аттестация по теме
Операционные системы и виртуализация (Linux)
Основы Linux. Установка системы
Установка ОС Ubuntu в виртуальной машине. Работа в SSH-клиенте
Работа с файлами в терминале
Права доступа и безопасность
Установка пакетов, репозитории. Планировщик Cron
Подключение сторонних репозиториев, ручная установка пакетов
Сетевые возможности Linux
Настройка сети в Linux. Работа с IPtables
Веб-сервер на Linux
Запуск стека для веб-приложения
Основы Docker
Запуск веб-приложения из контейнеров
Скрипты Bash
Контейнеризация
Механизм пространства имен
Механизмы контрольных групп
Введение в Docker
Dockerfile и слои
Docker Compose и Docker Swarm
Аттестация по теме
Базы данных и SQL
Инструменты для работы с базами данных
Установка СУБД, подключение к БД, просмотр и создание таблиц
Создание объектов, изменение данных, логические операторы, простые запросы выборки
Выборка данных, сортировка, агрегатные функции
Объединение таблиц (Union), соединение (Join), подзапросы
Работа с несколькими таблицами
Оконные функции
Транзакции, ACID, временные таблицы, управляющие конструкции, циклы
Аттестация по теме
⦿ Итоговая аттестация
★ Курсы на выбор
Алгоритмы и структуры данных
Контроль Версий Углубленно (Git)
Компьютерные сети
Гибкие методологии (Agile, SCRUM, Канбан и другие)
Веб верстка html/css
Вводный курс Big data
Искусственный интеллект
Кибернетика умных устройств
Data science передовые технологии
Основы информационной безопасности
Парадигмы программирования и языки парадигм
Технологическая специализация
3 месяца

Погружение в С++
Структура кода С++ и процесс компиляции
Синтаксис
Работа с памятью
Структуры и классы
Наследование и ООП
Динамический полиморфизм
Дополнительные возможности С++
Функции
Структуры данных и инструменты STL
Шаблоны
Шаблоны 2 часть
Move semantics && perfect forwarding
Умные указатели
Строки ввода и вывода
Встроенные типы, инструкции и операторы
Namespace. Переопределение операторов.
Стандартная библиотека шаблонов С++
Обработка ошибок, Отладка
Алгоритмы и функторы
bind & function
Препроцессор
Продвинутые возможности C++
TCP/UDP и IP
Разработка веб-приложения на С++
Библиотеки. Статические и динамические
Сmake, curl, простой сервер
Построение крупного проекта. 1 Часть.Облако хранения.
Построение крупного проекта. 2 Часть. Облако хранения.
⦿ Защита диплома"
6215,Разработчик приложений на Android,https://gb.ru/geek_university/developer/programmer/android,"Разработчики на Android занимаются созданием и доработкой приложений и программ для данной операционной системы. Они создают интерфейс, программируют логику работы приложения, занимаются оптимизацией ресурсов, которые необходимы для работы программы, Программирование",Fullstack,"Java,Kotlin,Android SDK,JUnit,Swift,Objective-C,iOS SDK,JavaScript,C++,CSQL,Git",Junior,"Станьте востребованным разработчиком приложений для устройств на Android. Вы изучите основы программирования и основные концепции компьютерных наук, цифровые технологии, операционные системы, программное обеспечение, базы данных, системы аналитики, языки программирования и многое другое. Познакомитесь с тестированием и системным анализом. На программе сможете сделать осознанный выбор специализации и технологий, прокачаться в выбранном направлении.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
Специализация
7 месяцев

Курсы
Знакомство с языком Python
Java: знакомство и как пользоваться базовым API
Объектно-ориентированное программирование (ООП)
Операционные системы и виртуализация (Linux)
База данных и SQL
Алгоритм и структуры данных
Промежуточная аттестация
Архитектура ПО
Контейнеризация
Сборка проектов и деплой, CI/CD
Парадигмы программирования и языки парадигм
Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти
Знакомство с веб-технологиями
вне четверти
Компьютерные сети
вне четверти
Контроль версий Углубленно (Git)
вне четверти
Итоговая аттестация
Технологическая специализация
3 месяца

Курсы
Java Core
Java Development Kit
Блок Kotlin и Окружение
Android фреймворк
Архитектура и Хранение данных
Многопоточность
Продвинутый блок и Google"
6304,Инженер по тестированию Мастер,https://gb.ru/geek_university/developer/qa-engineer/master,"QA-тестировщик или инженер по тестированию — это специалист, который создаёт сценарии тестирования, прогнозирует и находит ошибки в IT продуктах. Таким специалистам важно разбираться в бизнес-процессах и досконально знать продукт, чтобы сохранять баланс между интересами пользователей, целями менеджмента компании и возможностями команды разработки., Тестирование","Ручное,автоматизированное","Java,SQL,NoSQL,Allure,Spring,JUnit,Selenium,REST,CI/CD,X-Path,JavaScript,HTML/CSS,Python",Middle,"Станьте профессиональным инженером по тестированию мобильных и веб-приложений и систем. На программе Вы получите навыки ручного и автоматизированного тестирования, научитесь быстро находить баги, разрабатывать тест-кейсы и эффективные тестовые сценарии. Вы также изучите основы программирования и научитесь создавать системы автоматизированного тестирования. В пакете Мастер вы получаете возможность углубленно изучить технологическую специализацию с экспертной поддержкой.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.

Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.

Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.

Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.

Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.

Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.

Специализация

Знакомство с языком Python
Знакомство с веб-технологиями
Java: знакомство и как пользоваться базовым API
Промежуточная аттестация
Введение в тестирование
Основы ручного тестирования
Тест-дизайн и тест-анализ + Практикум
Подготовка к собеседованию. Часть 1
Тестирование API
Промежуточная аттестация
Тестирование веб-приложений
Тестирование мобильных приложений
Итоговая аттестация
Исключения в программировании и их обработка
вне четверти

Unit-тесты
вне четверти

Диаграммы состояний
вне четверти

Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти

Операционные системы и виртуализация (Linux)
вне четверти"
6261,Frontend-разработчик Мастер,https://gb.ru/geek_university/developer/programmer/frontend/master,"Frontend-разработчик отвечает за внешний вид сайта или мобильного приложения: он верстает шаблоны, красиво оформляет текст и изображения, улучшает взаимодействие пользователя с интерфейсом. Без frontend-разработчика не получится создать удобный цифровой продукт., Программирование",Frontend,"JavaScript,NodeJS,Vue.js,ReactJS,TypeScript,Webpack,SQL,Redux,Angular,Git",Middle,"Станьте Frontend-разработчиком, который специализируется на внешнем оформлении сайтов. Вы получите базовые знания и на практике научитесь создавать сайты и приложения, проектировать интерфейсы и работать со сложными инструментами frontend-разработчика. Изучите фреймворки и библиотеки, которые упростят вашу работу. Через 9 месяцев обучения вы сможете трудоустроиться. В пакете Мастер вы получаете возможность углубленно изучить технологическую специализацию с экспертной поддержкой.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
Специализация Программист


Курсы
Знакомство с языком Python
Java: знакомство и как пользоваться базовым API
Объектно-ориентированное программирование (ООП)
Операционные системы и виртуализация (Linux)
База данных и SQL
Алгоритм и структуры данных
Исключения в программировании и их обработка
Промежуточная аттестация
Архитектура ПО
Контейнеризация
Сборка проектов и деплой, CI/CD
Парадигмы программирования и языки парадигм
Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти
Знакомство с веб-технологиями
вне четверти
Компьютерные сети
вне четверти
Контроль версий Углубленно (Git)
вне четверти
Итоговая аттестация
Технологическая специализация


Курсы
Продвинутый HTML + CSS
JavaScript про ECMAScript
Основы Node.js и инструменты сборки кода
JavaScript про API браузеров
Библиотека React.js
Фреймворк AngularJS
Фреймворк Vue.js"
6265,Fullstack-разработчик,https://gb.ru/geek_university/developer/programmer/fullstack,"Fullstack-разработчики — универсальные программисты, которые разрабатывают и серверную, и клиентскую часть проекта. Эти специалисты очень востребованы, так как могут заменить программистов разного профиля. Fullstack-разработчики владеют широким стеком технологий, поэтому могут создать веб-проект в одиночку, Программирование",Fullstack,"JavaScript,HTML/CSS,PHP,Laravel,SQL,Git",Junior,"Станьте Fullstack-разработчиком, который разбирается и во внешней оболочке сайта, и в его внутренней логике работы. Получите базовые знания и на практике освойте навыки разработки веб-сервисов: от верстки и анимации, до создания баз данных. Изучите языки JavaScript, Python, PHP и другие технологии и научитесь создавать сайты, мобильные приложения и высоконагруженные сервисы. И уже через 9 месяцев вы сможете трудоустроиться.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
Специализация Программист


Курсы
Знакомство с языком Python
Java: знакомство и как пользоваться базовым API
Объектно-ориентированное программирование (ООП)
Операционные системы и виртуализация (Linux)
База данных и SQL
Алгоритм и структуры данных
Исключения в программировании и их обработка
Промежуточная аттестация
Архитектура ПО
Контейнеризация
Сборка проектов и деплой, CI/CD
Парадигмы программирования и языки парадигм
Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти
Знакомство с веб-технологиями
вне четверти
Компьютерные сети
вне четверти
Контроль версий Углубленно (Git)
вне четверти
Итоговая аттестация
Технологическая специализация


Курсы
Продвинутый HTML + CSS
JavaScript про ECMAScript
Основы Node.js и инструменты сборки кода
JavaScript про API браузеров
Библиотека React.js
Фреймворк AngularJS
Фреймворк Vue.js"
6292,Инженер-программист Python Мастер,https://gb.ru/geek_university/developer/programmer/python/master,"Python является самым популярным языком программирования из-за своей простоты и универсальности. Его используют не только для разработки веб-приложений и сервисов, но и для автоматизации, тестирования, анализа данных и машинного обучения. На Python написано множество библиотек для нейросетей и много другого., Программирование",Backend,"Python,SQL,NoSQL,Django,JavaScript,HTML/CSS,Git",Middle,"Станьте инженером-программистом на одном из самых простых и популярных языков программирования Python. На практике научитесь понимать фундаментальные алгоритмы и использовать их для решения задач. Вы сможете писать сайты, приложения, нейросети и программы для научных исследований, Telegram-бота. Вы сможете трудоустроиться после 9 месяцев обучения. В пакете Мастер вы получаете возможность углубленно изучить технологическую специализацию с экспертной поддержкой.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
Специализация Программист


Курсы
Знакомство с языком Python
Java: знакомство и как пользоваться базовым API
Объектно-ориентированное программирование (ООП)
Операционные системы и виртуализация (Linux)
База данных и SQL
Алгоритм и структуры данных
Исключения в программировании и их обработка
Промежуточная аттестация
Архитектура ПО
Контейнеризация
Сборка проектов и деплой, CI/CD
Парадигмы программирования и языки парадигм
Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти
Знакомство с веб-технологиями
вне четверти
Компьютерные сети
вне четверти
Контроль версий Углубленно (Git)
вне четверти
Итоговая аттестация
Технологическая специализация


Курсы
Погружение в Python
Веб-вёрстка HTML / CSS
Микрофреймворки Flask и FastAPI
Фреймворк Django"
6340,ИТ-инженер Data Science Мастер,https://gb.ru/geek_university/engineer/datascience,"Data Scientist анализирует большой объём данных, прогнозирует события и помогает находить неочевидные закономерности. С помощью машинного обучения он может ставить диагнозы, обнаруживать болезни и персонализировать лечение., Выберу в процессе обучения",,"Python,SQL,Docker,NoSQL,ANNs,Keras,TensorFlow,PyTorch,и другие",Middle,"Получите востребованную IT-профессию. Вы узнаете, где и как собирать и обрабатывать данные, чтобы извлечь из них пользу для бизнеса. Научитесь подбирать эффективное решение для клиента и реализовывать с помощью машинного обучения. На PRO-версии программы вы погрузитесь в технологическую специализацию и сможете трудоустроиться через 9 месяцев в процессе обучения или сразу после него.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.

Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.

Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.

Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.

Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.

Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.

Специализация

Знакомство с языком Python
Знакомство с веб-технологиями
Основы анализа данных в Excel
Основы языка Python для аналитиков
База данных и SQL
Введение в BI
Промежуточная аттестация
Введение в продуктовую аналитику
Теория вероятностей и математическая статистика
А/В тестирование
Основы моделирования бизнес процессов. Введение в бизнес-модель
Итоговая аттестация
Финансовая математика
вне четверти

Юнит-экономика
вне четверти

Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти

Конфликтология
вне четверти"
6648,Сетевой инженер,https://gb.ru/geek_university/developer/architecture/network-engineer,"Инженер по сетевым коммуникациям востребован в компаниях с развитой IT-инфраструктурой: это провайдеры, мобильные операторы, банки, больницы, заводы и аэропорты. Сетевой инженер создаёт и обслуживает внутренние сети компании, следит за устойчивой работой, правильной конфигурацией и защищённостью сетей., Архитектура",,"Python,Linux,TCP/IP,FHRP,STP,BGP,OSPF",Junior,"Вы научитесь настраивать оборудование и протоколы маршрутизации, проектировать безопасные и масштабируемые сети для бизнеса, автоматизировать рутинную работу.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
"
6652,DevOps-инженер Мастер,https://gb.ru/geek_university/developer/architecture/devops,"DevOps-инженеры контролируют все этапы создания продукта: от написания кода до релиза. Помогают отделам разработки и администрирования, синхронизируют их усилия и автоматизируют технические процессы. За два года спрос на этих специалистов вырос на 70%. Мы поможем стать DevOps-инженером с нуля и найдём вам работу, Архитектура",Backend,"Ethernet,Unix,CI/CD,DNS,Docker,Kubernetes (K8s),Python,SQL,NoSQL,Zabbix,ELK",Middle,"Вы научитесь настраивать пайплайны CI/CD, использовать подход «Инфраструктура как код» для настройки серверов и развёртывания инфраструктуры в облаке. Узнаете, в чём преимущество микросервисной архитектуры по сравнению с традиционной. Сможете работать с Docker и Kubernetes.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
"
6783,1С-разработчик,https://gb.ru/geek_university/developer/programmer/1c-developer,"Программист 1С (или 1С разработчик) – профессия на стыке программирования, бухгалтерского учета и менеджмента. Программисты 1С занимаются установкой, настройкой и доработкой бухгалтерских программ семейства 1С, ERP-систем семейства 1С-Предприятие и других продуктов фирмы 1С, Программирование",Backend,"1C,SOAP,HTTP,XML,JSON,СКД",Junior,"Освойте профессию программиста 1С с нуля. Вы научитесь создавать архитектуру приложения, разрабатывать подсистемы и подготовитесь к сдаче экзаменов 1С.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
Специализация Программист


Курсы
Знакомство с языком Python
Java: знакомство и как пользоваться базовым API
Объектно-ориентированное программирование (ООП)
Операционные системы и виртуализация (Linux)
База данных и SQL
Алгоритм и структуры данных
Исключения в программировании и их обработка
Промежуточная аттестация
Архитектура ПО
Контейнеризация
Сборка проектов и деплой, CI/CD
Парадигмы программирования и языки парадигм
Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти
Знакомство с веб-технологиями
вне четверти
Компьютерные сети
вне четверти
Контроль версий Углубленно (Git)
вне четверти
Итоговая аттестация
Технологическая специализация


Курсы
Базовый курс (с нуля до создания собственной конфигурации)
Расширения
Проект
Защита проекта
1С бухгалтерия для программиста
Вне четверти
1С торговля для программиста
Вне четверти
1С зарплата и кадры для программиста
Вне четверти"
7267,Java-разработчик. Специалист,https://gb.ru/geek_university/developer/programmer/java-gb,"Java-разработчик занимается разработкой высоконагруженных систем, веб-сервисов, банковских и корпоративных приложений, которыми пользуются люди по всему миру, Программирование",,"Java,SQL,NoSQL,Spring,Ethernet,Linux,Git,LibGDX,HTML/CSS",Junior,"Научим создавать сайты и веб-приложения на языке Java, работать с базами данных и сервером","Введение в программирование

Введение в контроль версий

Знакомство с языками программирования

Знакомство с базами данных

Введение в математику

Алгоритмы и структуры данных

Развитие карьеры 
Java: знакомство и как пользоваться базовыми API

Объектно-ориентированное программирование

Исключениия в программировании и их обработка

Java Core

Java Development Kit

Java Junior

Фреймворк Spring

Операционные системы и виртуализация (Linux)

Контейнеризация

Погружение в контроль версий

Базы данных и SQL

Подготовка дипломной работы
Защита диплома
Подготовка к работе 
Стратегия поиска работы
Как и где искать вакансии
Подготовка резюме
Подготовка к собеседованию"
7283,iOS-разработчик. Специалист,https://gb.ru/geek_university/developer/programmer/ios,"Инженеры-программисты iOS - это разработчики, которые занимаются созданием и доработкой приложений и программ для данной операционной системы. Они создают интерфейс, программируют логику работы приложения, занимаются оптимизацией ресурсов, которые необходимы для работы программы., Программирование",,"SQL,NoSQL,Kotlin,Swift,XCode,iOS SDK,IOS,Git",Junior,Научитесь полной разработке мобильных приложений для устройств Apple: от программирования интерфейса до работы с базами данных и запуска приложения в AppStore,"Введение в программирование

Введение в контроль версий

Знакомство с языками программирования

Знакомство с веб технологиям

Алгоритмы и структуры данных

Знакомство с базами данных

Развитие карьеры 
Контроль версий углубленно (Git)

Основы языка Swift

Разработка приложения на основе языка Swift

Objective-C для iOS-разработчиков


Операционные системы и виртуализация (Linux)

Подготовка дипломной работы
Защита диплома
Подготовка к работе 
Стратегия поиска работы
Как и где искать вакансии
Подготовка резюме
Подготовка к собеседованию"
7325,Frontend-разработчик. Специалист,https://gb.ru/geek_university/developer/programmer/frontend-gb,"Frontend-разработчик отвечает за внешний вид сайта или мобильного приложения: он верстает шаблоны, красиво оформляет текст и изображения, улучшает взаимодействие пользователя с интерфейсом. Без frontend-разработчика не получится создать удобный цифровой продукт., Программирование",Frontend,"JavaScript,Vue.js,TypeScript,Webpack,SQL,NoSQL,Git",Junior,"Станьте Frontend-разработчиком с нуля до Junior за 9 месяцев и получите работу по итогу обучения
Научитесь создавать сайты и веб-сервисы с помощью HTML, CSS, JavaScript, библиотек React и Redux","Введение в программирование

Введение в контроль версий

Знакомство с веб-технологиями

Развитие карьеры 
Основы JavaScript

Продолжение JavaScript

JavaScript и ECMAScript

Основы Node.js


JavaScript и API браузеров

Фреймворк Vue.js

Контроль версий углубленно (Git)

Операционные системы и виртуализация (Linux)

Подготовка дипломной работы
Защита диплома
Подготовка к работе 
Стратегия поиска работы
Как и где искать вакансии
Подготовка резюме
Подготовка к собеседованию"
7347,Кибернетика умных устройств. Специалист,https://gb.ru/geek_university/developer/programmer/internet-of-things,"Кибернетика умных устройств ― это создание техники, роботов, и систем, которые реагируют на внешние факторы и управляются через интернет. Например, умные часы и колонки, медицинская техника и системы управления ядерными реакторами.  Инженер-кибернетик умных устройств занимается сборкой, программированием и тестированием систем, которые могут самостоятельно собирать данные с датчиков и включать или выключать любое электронное устройство., Программирование",,"C,WI-FI,BLE,IoT,и другие",Junior,"Разработчик умных устройств
— Полное погружение в умные устройства и интернет вещей (IoT) для новичков

— Вы научитесь программировать устройства на языке C, использовать технологии Wi-Fi, Bluetooth и LoRa, создадите клиент-серверные платформы для обработки данных с датчиков

— Обучение на практике, с реальными проектами и гарантией трудоустройства по итогу обучения","Введение в программирование
Что такое программирование и языки программирования
Базовые алгоритмы и массив как структура данных
Сложность и стоимость алгоритмов
Введение в контроль версий
Знакомство с контролем версий
Установка и настройка системы контроля версий
Углубляемся в контроль версий
Знакомство с базами данных
Знакомство с базами данных
Работа с данными из разных таблиц
Создание структуры базы данных
Дополнительная лекция
Компьютерные сети
Основы компьютерных сетей. Технология Ethernet
Технология Ethernet. Протокол IP
Сетевой уровень. Протоколы маршрутизации. VLAN
Транспортный уровень. UPD и TCP
Трансляция адресов. VPN
HTTP(S). DNS
Видеокурс
Знакомство с языками программирования + Практикум
Знакомство с языком программирования C#
Знакомство с функциями и массивами
Функции: продолжение
Двумерные массивы и рекурсия
Как не нужно писать код: основные рекомендации
Как не нужно писать код: принципы и антипаттерны
Рекурсия: продолжение
C#: от простого к практике
Видеокурс
Алгоритмы и структуры данных
Вводная лекция. Алгоритмы. Сложность алгоритмов
Структуры данных. Массивы. Алгоритмы массивов
Структуры данных. Связный список
Структуры данных дерево и хэш-таблица
Введение в IoT
Введение в IoT
Архитектура IoT решений
Датчики и телеметрия
Платформы интернета вещей
Технологии передачи данных в IoT
Программирование на языке С (базовый уровень)
Введение в язык C и системы счисления
Типы данных
Ветвления и побитовые операции
Циклы
Буферный ввод. Функции
Область видимости. Указатели. Рекурсия
Вещественные типы данных. Массивы
Адресная арифметика. Массивы, строки
Структурные типы данных. Файлы
Многомодульные программы
Аргументы командной строки. Препроцессор. Отладка программ
Программирование на языке С (продвинутый уровень)
Побитовые операции. Структуры с побитовыми полями. Передача функции в функцию
Структуры. Динамические типы. Библиотеки языка С
Оптимизация кода
Алгоритмы
Компиляция и компиляторы
Динамические структуры данных
Курсовая работа
Особенности C для IoT
Лекция 1
Лекция 2
Лекция 3
Лекция 4
Распределенные системы и сети
Типы сетей и основные сетевые параметры
Облачные вычисления
Распределенные системы
Mesh-сети
IoT в распределенных системах и сетях и платформы интернета вещей
Практика. Своя система визуализации
Практика. Работа с сетью и сетевыми параметрами
Видеокурс
Контроль версий - углубленно
Работа с удалёнными репозиториями
Работа с изменениями
Практики и инструменты для работы с Git
Операционные системы и виртуализация (Linux)
Основы Linux. Установка системы
Работа с файлами в терминале
Права доступа и пользователи
Установка пакетов, репозитории. Планировщик Cron
Сетевые возможности Linux
Веб-сервер на Linux
Основы Docker
Скрипты Bash
Видеокурс
Контейниризация
Механизмы пространства
Механизмы контрольных групп
Введение в Docker
Dockerfile и слои
Docker Compose и Docker Swarm
Видеокурс
Парадигмы программирования и языки парадигм
Введение и основные типы парадигм
Структурное программирование
ООП
Декларативное программирование
Функциональное программирование
Логическое программирование
Дипломная работа"
7355,Разработчик C#. Специалист,https://gb.ru/geek_university/developer/programmer/csharp,"C# (C Sharp) — объектно-ориентированный язык программирования, лежит в основе платформы .NETFramework. Программист C# может создавать различные программы и приложения: мобильные и настольные приложения, облачные, Программирование",,"C#,ASP.NET,.NET,SQL,NoSQL,JavaScript,SOAP,gRPC,Git",Junior,"Станьте инженером-программистом C#.‍ Вы сможете написать игру, сайт, мобильное приложение или многопоточный сервис. Изучите основы этого универсального языка. На практике освоите алгоритмы и структуры данных, а также объектно-ориентированное программирование для С#. Получите практические навыки разработки веб-сервисов и приложений для работы, на которую вы сможете устроиться после 9 месяцев обучения.","Введение в программирование
Что такое программирование и языки программирования
Базовые алгоритмы и массив как структура данных
Сложность и стоимость алгоритмов
Введение в контроль версий
Знакомство с контролем версий
Установка и настройка системы контроля версий
Углубляемся в контроль версий
Знакомство с языками программирования
Знакомство с языком программирования С#
Знакомство с функциями и массивами
Функции продолжение
Двумерные массивы и рекурсия
Как не нужно писать код: основные рекомендации
Как не нужно писать код: принципы и антипаттерны
Рекурсия: продолжение
C#: от простого к практике
Знакомство с веб технологиям
Веб-технологии: вчера, сегодня, завтра
HTML, CSS
Основы JavaScript
Основы бэкенда: PHP и MySQL
JSON и XML
Видеокурс
Алгоритмы и структуры данных
Вводная лекция. Алгоритмы. Сложность алгоритмов
Структуры данных. Массивы. Алгоритмы массивов
Структуры данных. Связный список
Структуры данных дерево и хэш-таблица
Знакомство с базами данных
Знакомство с базами данных
Работа с данными из разных таблиц
Создание структуры базы данных
Дополнительная лекция
Базы данных и SQL
Инструменты для работы с базами данных
SQL - создание объектов, изменение данных, логические операторы
SQL - выборка данных, сортировка, агрегатные функции
SQL - объединение таблиц union, соединение - join, подзапросы
SQL - оконные функции
SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы
Видеокурс
Java: знакомство и как пользоваться базовым API
Почему вы не можете не использовать API
Коллекции JAVA: Введение
Хранение и обработка данных ч1: приоритетные коллекции
Хранение и обработка данных ч2: множество коллекций Map
Хранение и обработка данных ч3: множество коллекций Set, примеры. Введение в ООП, как описать свой тип
Видеокурс
Объектно-ориентированное программирование (ООП)
Введение в ООП. Свои типы и концепты
ООП: Абстракция и интерфейсы
Некоторые стандартные интерфейсы и новое поведение Обобщения
ООП: От простого к практике SOLID
Есть ли жизнь без Java?
Видеокурс
Исключения в программировании и их обработка
Подходы к обработке ошибок в разных языках программирования
Обработка исключений в Java
""Продвинутые"" вопросы работы с исключениями
Погружение в C#
Начало работы: .Net и Visual Studio
Условные операторы, циклы, массивы, строки, StringBuilder
Разработка приложения (C# углубленный)
Классы и ООП, Интерфейсы
Работа с датой и временем, пространство имен System. Collections и коллекции LINQ
Реализация паттерна Publisher/Subscriber
Управляемый и неуправляемый код: обработка ошибок, ""безопасный"" код, высвобождение ресурсов
Получение информации об обьекте во время выполнения приложения
Сериализация: все о сериализации (Байт, XML, JSON)
Работа с файловой системой: потоки и буферизация
Разработка сетевого приложения (C# углубленный)
Работа с сетью: чтение и запись данных в сеть. Клиентские и серверные приложения
Синхронизации : многопоточность, создание и завершение потоков
PLINQ и асинхронность: как работает, области применения
GOF: паттерны проектирования в .Net разработке Базы данных: Entity framework, code first/ db first
Тестирование приложений: test driven development
Библиотеки: Nuget и разработка собственных библиотек
Разработка web приложения (C# углубленный)
ASP.Net MVC, этапы жизни приложения, контроллеры
Инверся зависимости (IoC) и Autofac - гибкий инструмент для управления зависимостями
WEB-серивсы: разработка, контейнеризация и упаковка веб сервиса в докер-контейнер
Разграничение доступа: аутентификация, авторизация, OAUTH, JWT
Операционные системы и виртуализация (Linux)
Основы Linux. Установка системы
Работа с файлами в терминале
Права доступа и пользователи
Установка пакетов, репозитории. Планировщик cron
Сетевые возможности Linux
Веб-сервер на Linux
Основы Docker 
Скрипты Bash
Видеокурс
Контейнеризация
Механизмы пространства
Механизмы контрольных групп
Введение в Docker
Dockerfile и слои
Docker Compose и Docker Swarm
Контроль версий - углубленно
Работа с удалёнными репозиториями
Работа с изменениями
Практики и инструменты для работы с Git
Дипломная работа"
7426,Backend-разработчик. Специалист,https://gb.ru/geek_university/developer/programmer/backend,"Backend-разработчики отвечают за невидимую для глаз пользователей серверную часть платформ и программных продуктов. Они создают внутренние процессы сайтов и приложений, выстраивают обмен данными, подбирают системы для хранения и управления информацией, обеспечивают максимум производительности при минимуме сбоев., Программирование",Backend,"Python,PHP,Java,Go,C,C++,C#,SQL,NoSQL,Git",Junior,"Пишите код, который заставляет сайты работать
Научим создавать веб-приложения на языке Python, работать с базами данных и сервером","Введение в программирование

Введение в контроль версий

Знакомство с языками программирования

Знакомство с языком Python

Знакомство с веб технологиями

Знакомство с базами данных

Развитие карьеры 
Погружение в Python

Операционные системы и виртуализация (Linux)

Контейнеризация

Фреймворки Flask и FastAPI

Фреймворк Django

Контроль версий углубленно (Git)

Базы данных и SQL

Подготовка дипломной работы
Защита диплома
Подготовка к работе 
Стратегия поиска работы
Как и где искать вакансии
Подготовка резюме
Подготовка к собеседованию"
7596,Искусственный интеллект. Специалист,https://gb.ru/geek_university/developer/programmer/ai-spec,"Специалист по искусственному интеллекту — актуальная и востребованная профессия, особенно в медицине, финансах, производстве и технологиях. Он занимается созданием компьютерных систем, которые самостоятельно обрабатывают большие объемы данных и могут принять решение на основе анализа этих данных. Например, такие специалисты создали ChatGPT, Midjourney и другие популярные нейросети., Программирование",,"Python,SQL,Docker,NoSQL,ANNs,Keras,TensorFlow,R,PyTorch",Junior,"Научитесь создавать и обучать нейронные сети за 12 месяцев на 200+ реальных задачах
Создадите ИИ, которые распознают изображения и лица, прогнозируют данные и генерируют текст","Введение в программирование


Знакомство с базами данных

Введение в математику

Введение в информатику

Основы анализа данных в Excel

Знакомство с языком Python

Развитие карьеры 
Погружение в Python

Основы языка Python для аналитиков

Теория вероятностей и математическая статистика

Математический анализ

Линейная алгебра

Искусственный интеллект

Базы данных и SQL

Операционные системы и виртуализация (Linux)

Введение в Big Data

Сбор и разметка данных

Работа с источниками данных: Cassandra, Hive, Presto, Kafka

Transfer Learning

ETL: автоматизация подготовки данных

Знакомство с Apache Spark

Введение в BI

Библиотеки Python для Data Science

Нейросетевые подходы к обработке естественного языка (NLP)

Машинное обучение (Machine Learning)

Глубокое обучение в компьютерном зрении (Computer Vision using Deep Learning)

Архитектура нейросетей

Подготовка дипломной работы
Защита диплома
"
7598,Data Science в медицине. Специалист,https://gb.ru/geek_university/developer/analyst/data-science-medicine-spec,"Data Science в медицине занимается анализом больших объемов данных медицинских исследований и клинической практики. Он использует методы машинного обучения и статистического анализа, чтобы найти закономерности, которые помогают врачам диагностировать и лечить заболевания. Это очень высокооплачиваемая и перспективная профессия, так как работа специалиста по Data Science помогает врачам принимать решения и улучшать качество медицинской помощи., Аналитика","Сбор и обработка данных,Анализ данных,Data Science,Нейронные сети,Искусственный интеллект","Python,SQL,Docker,NoSQL,ANNs,Keras,TensorFlow,R,PyTorch",Junior,"Data Scientist в медицине: с нуля до Junior
— Полная программа обучения Data Science с самых азов
— Вы на практике научитесь анализировать медицинские данные и создавать модели машинного обучения для прогнозирования сердечно-сосудистых заболеваний, онкологии, сигналам ЭЭГ, рентгеновским изображениям
— В результате вы станете квалифицированным специалистом в области медицинской аналитики","Введение в программирование
Что такое программирование и языки программирования
Базовые алгоритмы и массив как структура данных
Сложность и стоимость алгоритмов
Введение в контроль версий
Знакомство с контролем версий
Установка и настройка системы контроля версий
Углубляемся в контроль версий
Математика
Информатика
Становление информатики
Операции с данными
Знакомство с языком Python
Знакомство с языком программирования Python
Ввод-Вывод, операторы ветвления
Циклы (for, while)
Коллекции данных. Профилирование и отладка
Списки и словари
Словари, множества и профилирование
Функции, рекурсия, алгоритмы
Рекурсия и алгоритмы
Повторение списков
Функции высшего порядка, работа с файлами
Функции высшего порядка
Работа с файлами
Google Colab (Jupyter). Знакомство с аналитикой
Работа с табличными данными
Построение графиков
Основы языка Python для аналитиков
Продолжение знакомства с Jupyter Notebook
Анализ данных с библиотекой Pandas
Модификация таблиц с Pandas
Визуализация данных с Matplotlib и Seaborn
Теория вероятностей и математическая статистика
Расчет вероятности случайных событий
Дискретные распределения вероятностей
EDA (exploratory data analysis) или Разведочный анализ
Непрерывная случайная величина
Тестирование гипотез
Сравнение долей. Построение доверительного интервала
Непараметрические тесты
Корреляционный анализ
Линейная регрессия Логистическая регрессия
Дисперсионный анализ
Математический анализ
Вводный урок
Последовательность
Функция
Предел функции. Теоремы о пределах
Непрерывность и дифференцируемость функции
Производные функции одной и нескольких переменных
Ряды
Понятие об интеграле
Дифференциальные уравнения 1-го порядка
Решение систем дифференциальных уравнений
Линейная алгебра
Линейное пространство. Основные понятия. Часть 1
Линейное пространство. Основные понятия. Часть 2
Матрицы и матричные операции. Часть 1
Матрицы и матричные операции. Часть 2
Линейные преобразования
Системы линейных уравнений. Часть 1
Системы линейных уравнений. Часть 2
Сингулярное разложение матриц
Искуcственный интеллект
Искусственный интеллект. Обзор
Технологические возможности реализации ИИ
Создание проекта машинного обучения (workflow)
Внедрение ИИ в организации
Базы данных и SQL
Инструменты для работы с базами данных
SQL - создание объектов, изменение данных, логические операторы
SQL - выборка данных, сортировка, агрегатные функции
SQL - объединение таблиц union, соединение - join, подзапросы
SQL - оконные функции
SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы
Операционные системы
Основы Linux. Установка системы
Работа с файлами в терминале
Права доступа и пользователи
Установка пакетов, репозитории. Планировщик Cron
Сетевые возможности Linux
Веб-сервер на Linux
Основы Docker
Скрипты Bash
Сбор и разметка данных
Основы клиент-серверного взаимодействия. Парсинг API
Парсинг HTML. BeautifulSoup
Системы управления базами данных MongoDB и Кликхаус в Python
Парсинг HTML. XPath
Scrapy. Парсинг фото и файлов
Scrapy. Парсинг фото и файлов
Selenium в Python
Работа с данными
Инструменты разметки наборов данных
Transfer learning
Обзор архитектур нейронных сетей
Библиотеки и фреймворки для создания нейронных сетей
Подготовка данных. Использование готовых моделей
Редактирование и дообучение нейронной сети
Введение в Big Data
Введение в Большие Данные
SQL & BigData
Инструменты работы и визуализации
ETL: автоматизация подготовки данных
Модели данных и нормализация таблиц. Схема ""звезда""
Введение в подготовку данных для аналитиков. Таблицы фактов и таблицы измерений
Получение денормализованных таблиц из нормализованных
Партицирование данных по дате. Динамическое партицирование
Обзор возможностей Airflow, установка и настройка
Операторы в Airflow и их применение для ETL
Построение пайплайнов и визуализация потоков данных в Airflow
Специфика применения ETL в различных предметных сферах
Библиотеки Python для DS
Вычисления с помощью Numpy
Работа с данными в Pandas
Визуализация данных в Matplotlib
Обучение с учителем в Scikit-learn
Обучение без учителя в Scikit-learn
Введение в задачу классификации. Постановка задачи и подготовка данных
Анализ данных и проверка статистических гипотез
Построение модели классификации
Способы улучшения полученной модели
Машинное обучение
Регрессионный анализ. Линейная, полиномиальная и логарифмическая регрессия
Классификация. Логистическая регрессия и SVM
Функции потерь и оптимизация
Оценка точности модели, переобучение, регуляризация
Проблема качества данных
Работа с пропусками
Работа с переменными
Деревья решений
Ансамблирование
Поиск выбросов и генерация новых признаков
Feature Selection
Улучшение качества модели
Глубокое обучение в компьютерном зрении. Интерактивный курс GU
Обработка изображений и компьютерное зрение
Свёрточные нейронные сети (СНС)
Продвинутые архитектуры свёрточных нейросетей
Семантическая сегментация
Детектирование объектов
Metric learning
Обработка видео
Синтез изображений
Классические подходы к обработке естественного языка
Обработка тестов. Векторизация. Регулярные выражения. Стемминг, лемматизация
Векторизация тестов. TfIdf, Count, Hashing векторизаторы. Понятие ngram
Эмбеддинги. Word2vec, Doc2Vec, fasttext
Тематическое моделирование. Введение в EM-алгоритм
Тематическое моделирование. LDA
Тематическое моделирование. BigArtm. Иерархические тематические модели
Постановка основных задач работы с текстом. NER, токенизация, классификация текстов
Нейросетевые подходы к обработке естественного языка
Сети прямого распространения. Backpropagation. Функции активации. Дропаут
Сети прямого распространения для работы с текстами. Сравнение с классическими подходами
Сверточные сети. Функции пуллинга. Сверточные сети для обработки текстов
Рекуретные сети. LSTM, GRU их применение для обработки текстов
Encoder-decode архитектура. Генерация текстов. Механизм Attention
Архитектура Transformer. Применение трансформера к задачам классификации текста. (и генерации)
Bert архитектура. Принципы finetuning
Архитектура современных чат-ботов. ANN
Видеокурс
Введение в молекулярную биологию и генетику
База данных NCBI
От гена до белка
Мутации
Методы
Секвенирование
Области применения
Прикладные задачи анализа медицинских данных
Прогнозирование и диагностика в медицине с помощью машинного обучения
Computer Vision для медицинских изображений
Применение NLP в здравоохранении
Введение в анализ данных медицинских изображений
Прикладная статистика в медицине
Прогнозирование и диагностика в медицине
Основы прогнозирования и диагностики в медицине
Методы машинного обучения для диагностики заболеваний
Применение искусственного интеллекта в клинической медицине
Прогнозирование заболеваний с помощью медицинского анализа данных
Computer Visiom для медицинских изображений
Введение в PyTorch. Аугментация изображений
Классификация медицинских изображений
Сегментация медицинских изображений
Консультация по проекту. Тема проекта: сегментация и классификация COVID-19 по КТ снимкам
Применение NLP в Здравохранении
Использование NLP в медицинской документации и электронных медицинских записях (EMR)
Применение NLP для анализа данных клинических испытаний
Дипломная работа"
7606,Android-разработчик. Специалист,https://gb.ru/geek_university/developer/programmer/android-spec,"Android-разработчик — перспективная профессия, которая связана с разработкой приложений для мобильных устройств на андройде. Он использует языки программирования Java и Kotlin, фреймворки и другие инструменты, чтобы создавать функциональные и удобные в использовании приложения. Например, такие специалисты могут создавать игры, соцсети или интернет-магазины., Программирование",Fullstack,"Java,Kotlin,Android SDK,JUnit,Swift,Objective-C,iOS SDK,JavaScript,C++,CSQL,Git",Junior,"Android-разработчик: быстрый старт в профессии
— Станьте Android-разработчиком с нуля
— Вы на практике научитесь создавать приложения для мобильных устройство, их интерфейсы и логику работы, узнаете как работать с базами данных и интегрировать различные сервисы
— В результате вы станете квалифицированным Android-разработчиком мобильных приложений и гарантированно найдете работу в этой сфере","Введение в программирование
Что такое программирование и языки программирования
Создаем и записываем свои первые алгоритмы
Базовые алгоритмы и массив как структура данных
Решаем задачи с массивами
Сложность и стоимость алгоритмов
Сравниваем разные алгоритмы решения задач
Аттестация по теме

Введение в контроль версий
Знакомство с контролем версий
Первое использование контроля версий
Установка и настройка системы контроля версий
Второе использование контроля версий
Углубляемся в контроль версий
Работа с удаленными репозиториями
Аттестация по теме

Знакомство с языками программирования
Простые алгоритмы
Массивы
Функции
Двумерные массивы
Массивы и строки
Рекурсия
Аттестация по теме

Базы данных и SQL
Инструменты для работы с базами данных
Установка СУБД, подключение к БД, просмотр и создание таблиц
Создание объектов, изменение данных, логические операторы
Создание объектов, простые запросы выборки
Выборка данных, сортировка, агрегатные функции
Объединение таблиц (Union), соединение (Join), подзапросы
Работа с несколькими таблицами
Оконные функции
Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы
Аттестация по теме

Java: знакомство и как пользоваться базовым API
Знакомство с языком программирования Java
Почему вы не можете не использовать API
Коллекции Java: введение
Хранение и обработка данных ч.1: приоритетные коллекции
Хранение и обработка данных ч.2: множество коллекций Map
Хранение и обработка данных ч.3: множество коллекций Set
Аттестация по теме

Объектно-ориентированное программирование (ООП)
Введение в ООП. Свои типы и концепты
Принципы ООП: инкапсуляция, наследование, полиморфизм
Принципы ООП. Абстракция и интерфейсы. Пример проектирования
Некоторые стандартные интерфейсы Java и примеры их использования
ООП: обобщения
ООП: от простого к практике
SOLID
ООП: дизайн и Solid
Есть ли жизнь без Java?
Аттестация по теме

Блок Kotlin и Окружение
Введение в Kotlin
Практика по основам Kotlin
Классы в Kotlin
Практика по классам в Kotlin
Функции в Kotlin
Практика по функциям в Kotlin
Продвинутый Kotlin
Практика по исключениям и взаимодействию с Java
Аттестация по теме

Android-разработчик
Начало работы
Вёрстка экранов
ConstraintLayout
Основные компоненты пользовательского интерфейса
Ресурсы проекта
Экраны приложения
Фрагменты
Анимация
Локализация приложений
Жизненный цикл приложения
Основы хранения данных
Архитектура презентационного слоя
Data Binding
Работа с сетью
Работа с БД (Room)
Архитектура проекта
Работа с массивами данных
Работа с защищёнными разделами ОС
Работа с геопозиционированием
Firebase
Подготовка к релизу
Аттестация по теме

Архитектура
Архитектура приложения. Слоистая и чистая архитектура
Слоистая и чистая архитектура
Архитектура презентационного слоя MVVM, MVP, MVI
Создание приложения с MVVM
Внедрение зависимостей (DI)
Тестируемая архитектура
Многомодульность
Аттестация по теме

Многопоточность
RxJava основы
RxJava операторы
Coroutines основы
Coroutines Structured Concurency, Flow
Аттестация по теме

Продвинутый блок
Permissions
Services
Background Tasks & Work Manager
Broadcast Receivers
Профайлинг и отладка
Аттестация по теме

Дополнительные курсы
на выбор

Курсы
Знакомство с базами данных
Знакомство с базами данных
Работа с данными из разных таблиц
Создание структуры базы данных
Дополнительная лекция

Исключения в программировании и их обработка
Обработка ошибок в программировании
Исключения и их обработка
Продвинутая работа с исключениями в Java

Java Core
Платформа: история и окружение
Компиляция и интерпретация кода
Специализация: данные и функции
Данные и функции
Специализация: ООП
Классы и объекты
Специализация: ООП и исключения
Обработка исключений
Специализация: тонкости работы
Тонкости работы

Java Development Kit
Графические интерфейсы
Программные интерфейсы
Обобщенное программирование
Коллекции
Многопоточность
Управление проектом: сборщики проектов
"
7628,Разработчик С++. Специалист,https://gb.ru/geek_university/developer/programmer/cpp-spec-gb,"Разработчик C++ создаёт программы, приложения, игры, операционные системы, драйверы и другое высоконагруженное программное обеспечение. Если вы хотите выжать максимум из любого «железа», программировать роботов, создать свою ОС, язык или другую мощную и жадную до ресурсов штуку — вам понадобится язык программирования С++, Программирование",Backend,"С++,SQL,Linux,Сmake,Docker",Junior,"Разработчик на C++: быстрый старт в профессии
— Научитесь программировать на C++ с нуля
— Вы изучите на практике, как работать с языком программирования C++, его библиотеками и инструментами, освоите алгоритмы и структуры данных, необходимые для разработки программных продуктов, получите опыт работы с популярными платформами
— Сможете выполнять проекты на C++ и трудоустроиться по профессии","Математика
Вводный урок
Лекция 1
Лекция 2
Лекция 3
Лекция 4
Введение в программирование
Что такое программирование и языки программирования
Базовые алгоритмы и массив как структура данных
Сложность и стоимость алгоритмов
Введение в контроль версий
Знакомство с контролем версий
Установка и настройка системы контроля версий
Углубляемся в контроль версий
Знакомство с базами данных
Знакомство с базами данных
Работа с данными из разных таблиц
Создание структуры базы данных
Дополнительная лекция
Базы данных и SQL
Инструменты для работы с базами данных
SQL - создание объектов, изменение данных, логические операторы
SQL - выборка данных, сортировка, агрегатные функции
SQL - объединение таблиц union, соединение - join, подзапросы
SQL - оконные функции
SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы
Компьютерные сети
Основы компьютерных сетей. Технология Ethernet
Технология Ethernet. Протокол IP
Сетевой уровень. Протоколы маршрутизации. VLAN
Транспортный уровень. UPD и TCP
Трансляция адресов. VPN
HTTP(S). DNS
Операционные системы и виртуализация (Linux)
Основы Linux. Установка системы
Работа с файлами в терминале
Права доступа и пользователи
Установка пакетов, репозитории. Планировщик Cron
Сетевые возможности Linux
Веб-сервер на Linux
Основы Docker
Скрипты Bash
Погружение в С++
Cтруктура кода С++ и процесс компиляции
Первая программа и компиляция
Работа с памятью
Структуры и классы
Наследование и ООП
Динамический полиморфизм
Дополнительные возможности С++
Функции
Структуры данных и инструменты STL
Шаблоны
Шаблоны 2 часть
Move semantics && perfect forwarding
Умные указатели
Строки ввода и вывода
Встроенные типы, инструкции и операторы
Namespace. Переопределение операторов
Стандартная библиотека шаблонов С++
Обработка ошибок, Отладка
Алгоритмы и функторы
bind & function
Препроцессор
Продвинутые возможности C++
Нововведения стандартов 2011 - 2021 годов
Разработка веб-приложения на С++
Сmake
Библиотеки. Статические и динамические
Построение крупного проекта. 1 Часть
Построение крупного проекта. 2 Часть
Контроль версий. Углубленно
Работа с удалёнными репозиториями
Работа с изменениями
Практики и инструменты для работы с Git
Контейниризация
Механизмы пространства
Механизмы контрольных групп
Введение в Docker
Dockerfile и слои
Docker Compose и Docker Swarm
Дипломная работа
Итоговая аттестация"
7783,1С-разработчик. Специалист,https://gb.ru/geek_university/developer/programmer/1c-spec-gb,"1C-разработчик — востребованный специалист на рынке труда, который создает программное обеспечение для автоматизации и оптимизации бизнес-процессов в компаниях, настраивает отчеты и документы, разрабатывает интеграционные решения для обмена данными между разными системами. Для этого ему нужно знать программирование, базы данных и понимать, как работает бизнес. Все это вы с нуля сможете изучить на нашей программе обучения., Программирование",Backend,"1C,1C:Бухгалтерия 8,1С:Зарплата и управление персоналом 8,1С:Предприятие,1С:Комплексная автоматизация,SOAP,СКД,HTTP,JSON,XML",Junior,"Курс «1C-разработчик: быстрый старт в профессии»
— Станьте 1C-разработчиком с нуля
— Вы научитесь создавать и настраивать базы данных, разрабатывать отчеты и формы, изучите язык программирования 1C
— Получите практические навыки работы в «1С:Комплексная автоматизация» и «1С:Бухгалтерия»
— В результате станете квалифицированным 1C-разработчиком и сможете гарантированно трудоустроиться","Введение в программирование
Что такое программирование и языки программирования
Создаем и записываем свои первые алгоритмы
Базовые алгоритмы и массив как структура данных
Решаем задачи с массивами
Сложность и стоимость алгоритмов
Сравниваем разные алгоритмы решения задач
Аттестация по теме
Основы бухгалтерского учета
Введение в бухгалтерский учет
Основы бухгалтерского учета
Регулирование бухгалтерского учета
Базовый курс 1С: с нуля до создания собственной конфигурации
Введение в 1С. Встроенный язык программирования. Обработки
Основы конфигурирования. Справочники
Управляемые формы. Объекты встроенного языка для работы с данными
Управляемые формы. Перечисления. Объекты встроенного языка для работы с данными
Настройка интерфейса. Регистры сведений
Документы
Регистры накопления, движения
Объекты встроенного языка для работы с данными. Универсальные коллекции.
Механизм запросов
Получение данных из регистров. Виртуальные таблицы
Получение данных из нескольких таблиц; Обработка результатов запроса
Временные таблицы. Пакетные запросы
Система компоновки данных
Пользователи, права доступа, роли
Развитие карьеры
6 месяцев • 7 модулей

Расширения конфигурации
Механизм расширений
Расширение форм и макетов
Расширение модулей и данных
Расширение прав доступа и подсистем
Основы управленческого учета
Введение в управленческий учет
Методы разнесения затрат и калькуляции себестоимости, часть 1
Методы разнесения затрат и калькуляции себестоимости, часть 2
Юнит-экономика
Бюджетирование и план-факт анализ
Начинаем дипломный проект
1С Бухгалтерия для программиста
Настройка основных параметров и справочников
Зарплата и кадры компании
Виды бюджетов и их формирование
Финансовый результат и контроллинг. Закупка и продажа
Производственная структура компании
Управление средствами компании
Бухгалтерская и налоговая отчетность
1С Комплексная автоматизации для программиста
Настройка основных параметров и справочников
Зарплата и кадры компании
Виды бюджетов и их формирование
Финансовый результат и контроллинг. Закупка и продажа
Производственная структура компании
Управление средствами компании
Бухгалтерская и налоговая отчетность
Знакомство с базами данных
SQL, Google Sheets, MS Excel
Работа с данными из разных таблиц
Создание структуры базы данных
Аттестация по теме
Основы анализа данных в Excel
Основы работы с электронными таблицами
Применение формул. Функции
Инструменты визуализации в MS Excel. Элементы статистики и прогнозирования
Анализ данных
Анализ «что если». Надстройки MS Excel
Применение макросов в MS Excel. Разработка макросов
Аттестация по теме
Итоговая аттестация
Дополнительные темы
На выбор

Введение в контроль версий
Знакомство с контролем версий
Первое использование контроля версий
Установка и настройка системы контроля версий
Второе использование контроля версий
Углубляемся в контроль версий
Работа с удаленными репозиториями
Аттестация по теме
Знакомство с языками программирования
Знакомство с языком программирования C#
Знакомство с функциями и массивами
Базовые алгоритмы
Функции
Функции и одномерные массивы
Рекурсия и двумерные массивы
Одномерные массивы
Как не нужно писать код: основные рекомендации
Как не нужно писать код: принципы и антипаттерны
Двумерные массивы
Рекурсия
C#: от простого к практике
Аттестация по теме
"
8766,Веб-разработчик. Специалист. Смешанный формат,https://gb.ru/geek_university/developer/programmer/web,"Веб-разработчик создаёт сайты: поисковики, соцсети, банковские приложения. Он отвечает как за внешний вид сайта, так и за его логику: работу серверов, файлов и баз данных. Если убрать веб-разработчиков, бизнес перестанет зарабатывать в интернете, Программирование",,"JavaScript,SQL,HTML/CSS,Git,Безопасность",Junior,"Веб-разработчик: быстрый старт в профессии
Станьте веб-разработчиком и получите одну из самых востребованных профессий в IT. Вы изучите основы программирования, принципы работы баз данных и основные алгоритмы, а также овладеете необходимыми технологиями и программами. На практике освоите языки JavaScript и TypeScript, научитесь создавать адаптивные сайты и интерактивные веб-приложения. Через 9 месяцев вы сможете трудоустроиться.","Введение в программирование
Что такое программирование и языки программирования
Базовые алгоритмы и массив как структура данных
Сложность и стоимость алгоритмов
Введение в контроль версий
Знакомство с контролем версий
Установка и настройка системы контроля версий
Углубляемся в контроль версий
Видеокурс
Знакомство с языками программирования + Практикум
Знакомство с языком программирования С#
Знакомство с функциями и массивами
Функции продолжение
Двумерные массивы и рекурсия
Как не нужно писать код: основные рекомендации
Как не нужно писать код: принципы и антипаттерны
Рекурсия: продолжение
C#: от простого к практике
Знакомство с веб технологиям
Веб-технологии: вчера, сегодня, завтра
HTML, CSS
Основы JavaScript
Основы бэкенда: PHP и MySQL
JSON и XML
Знакомство с языком Python
Знакомство с языком программирования Python
Ввод-Вывод, операторы ветвления
Циклы(for, while)
Коллекции данных. Профилирование и отладка
Списки и словари
Словари, множества и профилирование
Функции, рекурсия, алгоритмы Рекурсия и алгоритмы
Повторение списков 
Функции высшего порядка, работа с файлами
Функции высшего порядка
Работа с файлами
Google Colab(Jupyter). Знакомство с аналитикой
Работа с табличными данными
Построение графиков
Погружение в Python
Основы Python
Простые типы данных
Коллекции
Функции
Интераторы и генераторы
Модули
Файлы и файловая система
Сериализация
Декораторы
Исключения
ООП. Начало
ООП. Особенности Python
ООП. Финал
Основы тестирования
Обзор стандартной библиотеки Python
Фреймворки Flask и FastAPI
Фреймворк Django
Django - что это? И для чего?
Django ORM и связи
Шаблоны, классы и формы
Работа с пользователями и права в Django. Оптимизация проекта
Развертывание Django проекта. Тестирование проекта
Контроль версий - углубленно
Работа с удалёнными репозиториями
Работа с изменениями
Практики и инструменты для работы с Git
Видеокурс
Знакомство с базами данных
Знакомство с базами данных
Работа с данными из разных таблиц
Создание структуры базы данных
Дополнительная лекция
Базы данных и SQL
Инструменты для работы с базами данных
SQL - создание объектов, изменение данных, логические операторы
SQL - выборка данных, сортировка, агрегатные функции
SQL - объединение таблиц union, соединение - join, подзапросы
SQL - оконные функции
SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы
Дипломная работа"
8767,Python-разработчик. Специалист. Смешанный формат,https://gb.ru/geek_university/developer/programmer/python-gb,"Python является самым популярным языком программирования из-за своей простоты и универсальности. Его используют не только для разработки веб-приложений и сервисов, но и для автоматизации, тестирования, анализа данных и машинного обучения. На Python написано множество библиотек для нейросетей и много другого., Программирование",,"Python,SQL,NoSQL,Django,JavaScript,HTML/CSS,Git",Junior,"Python-разработчик: быстрый старт в профессии
• Изучите Python с нуля и без навыков программирования
• На курсе вы узнаете, как создавать телеграм-ботов, сайты, приложения, нейросети и использовать Python для научных исследований — теория и практика на реальных задачах
• В результате станете Python-разработчиком и гарантированно найдете работу","Введение в программирование
Что такое программирование и языки программирования
Базовые алгоритмы и массив как структура данных
Сложность и стоимость алгоритмов
Введение в контроль версий
Знакомство с контролем версий
Установка и настройка системы контроля версий
Углубляемся в контроль версий
Видеокурс
Знакомство с языками программирования + Практикум
Знакомство с языком программирования С#
Знакомство с функциями и массивами
Функции продолжение
Двумерные массивы и рекурсия
Как не нужно писать код: основные рекомендации
Как не нужно писать код: принципы и антипаттерны
Рекурсия: продолжение
C#: от простого к практике
Знакомство с веб технологиям
Веб-технологии: вчера, сегодня, завтра
HTML, CSS
Основы JavaScript
Основы бэкенда: PHP и MySQL
JSON и XML
Знакомство с языком Python
Знакомство с языком программирования Python
Ввод-Вывод, операторы ветвления
Циклы(for, while)
Коллекции данных. Профилирование и отладка
Списки и словари
Словари, множества и профилирование
Функции, рекурсия, алгоритмы Рекурсия и алгоритмы
Повторение списков 
Функции высшего порядка, работа с файлами
Функции высшего порядка
Работа с файлами
Google Colab(Jupyter). Знакомство с аналитикой
Работа с табличными данными
Построение графиков
Погружение в Python
Основы Python
Простые типы данных
Коллекции
Функции
Интераторы и генераторы
Модули
Файлы и файловая система
Сериализация
Декораторы
Исключения
ООП. Начало
ООП. Особенности Python
ООП. Финал
Основы тестирования
Обзор стандартной библиотеки Python
Фреймворки Flask и FastAPI
Фреймворк Django
Django - что это? И для чего?
Django ORM и связи
Шаблоны, классы и формы
Работа с пользователями и права в Django. Оптимизация проекта
Развертывание Django проекта. Тестирование проекта
Контроль версий - углубленно
Работа с удалёнными репозиториями
Работа с изменениями
Практики и инструменты для работы с Git
Видеокурс
Знакомство с базами данных
Знакомство с базами данных
Работа с данными из разных таблиц
Создание структуры базы данных
Дополнительная лекция
Базы данных и SQL
Инструменты для работы с базами данных
SQL - создание объектов, изменение данных, логические операторы
SQL - выборка данных, сортировка, агрегатные функции
SQL - объединение таблиц union, соединение - join, подзапросы
SQL - оконные функции
SQL - Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы
Дипломная работа"
8979,DevOps-инженер. Специалист,https://gb.ru/geek_university/developer/architecture/devops-spec-gb,"DevOps-инженер автоматизирует процессы разработки, тестирования и установки программного обеспечения. Он отвечает за создание и поддержку инфраструктуры, обеспечивает доступность и надежность компьютерных систем. Это востребованная и высокооплачиваемая профессия, так как помогает бизнесу оптимизировать процессы, отвечать на потребности пользователя и приносить прибыль компании., Программирование",Backend,"Ethernet,Unix,CI/CD,DNS,Docker,Kubernetes (K8s),Python,SQL,NoSQL,Zabbix,ELK",Junior,"DevOps-инженер: быстрый старт в профессии
— Станьте DevOps-инженером с нуля
— Вы на практике научитесь автоматизировать процессы разработки и внедрения ПО, организовать непрерывную интеграцию и доставку (CI/CD), научитесь работать с облачными сервисами, Docker и Kubernetes
— В результате станете квалифицированным DevOps-инженером и гарантировано найдете работу по профессии","Введение в программирование
Введение в контроль версий
Знакомство с контролем версий
Первое использование контроля версий
Установка и настройка системы контроля версий
Второе использование контроля версий
Углубляемся в контроль версий
Работа с удаленными репозиториями
Аттестация по теме

Знакомство с базами данных
Знакомство с базами данных
Работа с данными из разных таблиц
Создание структуры базы данных
Дополнительная лекция
Аттестация по теме

Компьютерные сети
Основы компьютерных сетей. Ethernet
Технология Ethernet. Протокол IP
Сетевой уровень. Протоколы маршрутизации. VLAN
Основы компьютерных сетей. Сетевой уровень. Протоколы маршрутизации. VLAN.
Транспортный уровень. UDP и TCP
Основы компьютерных сетей. Транспортный уровень. UDP и TCP
Трансляция адресов. VPN
NAT. GRE.
Основы HTTP/HTTPS и DNS
Аттестация по теме

Операционные системы и виртуализация (Linux)
Основы Linux. Установка системы
Установка ОС Ubuntu в виртуальной машине. Работа в SSH-клиенте
Работа с файлами в терминале
Работа с файлами и ссылками
Права доступа и пользователи
Права доступа и безопасность
Установка пакетов, репозитории. Планировщик Cron
Подключение сторонних репозиториев, ручная установка пакетов
Сетевые возможности Linux
Настройка сети в Linux. Работа с IPtables
Веб-сервер на Linux
Запуск стека для веб-приложения
Основы Docker
Запуск веб-приложения из контейнеров
Скрипты Bash
Аттестация по теме

Контейнеризация
Механизмы пространства имен
Механизмы контрольных групп
Введение в Docker
Dockerfile и слои
Docker Compose и Docker Swarm
Аттестация по теме

Linux: решение проблем и оптимизация
Загрузка системы. Загрузчик GRUB
Процессы, systemd
Диски LVM, RAID
Диагностика производительности
Диагностика сети (tcpdump, iptables, nf_tables)
Безопасность
Балансировка нагрузки, оптимизация Nginx
Мониторинг Prometheus
Репликация и резервное копирование MySQL
Аттестация по теме

Контроль версий углубленно (Git)
Работа с удалёнными репозиториями
Работа с изменениями
Практики и инструменты для работы с Git
Аттестация по теме

Основы Kubernetes
Введение в Kubernetes
Установка Kubernetes
Знакомство с сущностями. Часть 1
Знакомство с сущностями. Часть 2
Хранение секретов
Хранение данных в кластере
Знакомство с сущностями Kubernetes. Часть 1
Знакомство с сущностями Kubernetes. Часть 2
Job, CronJob
Helm
RBAC, CustomResources
Vault
Аттестация по теме

Виртуализация (VMWare, Hyper-V)
Курс в разработке

Администрирование Windows и работа с Powershell
Хранение паролей и политика доступа
Управление групповыми политиками доступа
Службы аудита
Управление учётными записями
Цифровые подписи
Строение реестра и его возможности
PowerShell
Доменные службы Active Directory

Дополнительные курсы
на выбор

Курсы
Знакомство с языком Python
Знакомство с языком программирования Python
Ввод-Вывод, операторы ветвления
Циклы (for, while)
Коллекции данных. Профилирование и отладка
Списки и словари
Словари, множества и профилирование
Функции, рекурсия, алгоритмы
Рекурсия и алгоритмы
Повторение списков
Функции высшего порядка
Работа с файлами
Google Colab(Jupyter). Знакомство с аналитикой
Работа с табличными данными
Построение графиков

Java: знакомство и как пользоваться базовым API
Знакомство с языком программирования Java
Почему вы не можете не использовать API
Коллекции Java: введение
Хранение и обработка данных ч.1: приоритетные коллекции
Хранение и обработка данных ч.2: множество коллекций Map
Хранение и обработка данных ч.3: множество коллекций Set

Базы данных и SQL
Инструменты для работы с базами данных
Установка СУБД, подключение к БД, просмотр и создание таблиц
Создание объектов, изменение данных, логические операторы
Создание объектов, простые запросы выборки
Выборка данных, сортировка, агрегатные функции
Объединение таблиц (Union), соединение (Join), подзапросы
Работа с несколькими таблицами
Оконные функции
Транзакции, ACID. Временные таблицы, управляющие конструкции, циклы

Основы сетевых технологий
Каналы с коммутацией пакетов
Ethernet
Протокол Ethernet
Стек протоколов TCP/IP
Транспортный уровень. UDP и TCP
IP адресация
Расчёт IP подсетей
Коммутация, коммутаторы
Маршрутизация, маршрутизаторы

Коммутация
VLAN (Virtual local area network)
Семейство протоколов Spanning Tree
Протоколы агрегирования
Межвиланная маршрутизация. Протоколы управления
Протокол настройки IP адреса DHCP Протоколы передачи файлов FTP, TFTP
Резервирование шлюза FHRP

Архитектура ПО
Введение в понятие архитектуры, проектирование ПО и жизненный цикл программного продукта. UML-диаграммы
Объектно-ориентированные паттерны
Принципы SOLID
Компоненты. Принципы связности и сочетаемости компонентов
Горизонтальные уровни и вертикальные срезы архитектуры
Принципы построения приложений «чистая архитектура»
Типы архитектур WEB-приложений: MPA, SPA.
Типы архитектур прикладных приложений (мобильные): MVC, MVP, MVVM.
Способы организации передачи данных между компонентами приложения, протоколы и API. REST, gRPC, очереди
Структура приложения с пользовательским интерфейсом и базой данных (паттерн Repository)
Сервис-ориентированные архитектуры
Принципы тестирования приложений

"
9037,Специалист по внедрению ИИ,https://gb.ru/s/ai-integration-specialist,", Программирование",,"С нуля,Промпт-инженер,Zero-code,от 4-х проектов в портфолио",Junior,"Курс ""Стань специалистом по Искусственному Интеллекту за 6 месяцев"" предназначен для тех, кто хочет освоить ключевые навыки в области ИИ. В рамках 4 модулей участники изучат создание GPT-агентов, No-Code AI автоматизацию, работу с AI на собственных серверах и разработку дипломного проекта. В конце курса участники будут иметь в своем портфолио несколько проектов и глубокое понимание применения ИИ в бизнесе.","Создание GPT-агентовМодуль 
В этом модуле вы Знакомство с Искусственным Интеллектом Продвинутый промпт-инжиниринг Знакомство с GPT-агентамиСоздание своего GPT-агентаПрактика по созданию GPT-агентов для заказчиковПрактика по поиску клиентов и продаже своих услугНа выходе3 разных GPT-агента в портфолио и упакованное предложение по продаже услуг
No-Code AI автоматизацияМодуль 
В этом модуле выИспользование сервисов для no-code автоматизацииТехнологии распознавания речиТехнологии распознавания изображений и видеоПрограммирование с помощью нейросетейРабота в GPT с большими объемами текстаЭмбеддинги и работа с векторными базами данныхНа выходе2 новых проекта в портфолио по комплексной автоматизации с помощью AI
AI автоматизация на своих серверахМодуль 
В этом модуле выПрограммирование с нейросетямиРабота с облачной платформой VK cloudРабота с open-source моделями, поиск и запускНовые сервисы компьютерного зрения и распознавания речиРабота с виртуальными серверамиНа выходеБольшой профессиональный проект внедрения AI для автоматизации бизнес-процессов
Дипломный проектМодуль 
В этом модулеКейс-стади с реальными заказчиками, разбор проектов внедрения ИИАлгоритмы решения разных задач с помощью микса технологий и сервисовОткрытые практикумы по использованию разных технологий и моделейОткрытый микрофон, взаимное наставничество, peer-to-peerНа выходеБольшой дипломный проект внедрения AI для автоматизации бизнес-процессов"
1001,Программист с нуля до Junior,https://gb.ru/geek_university/developer/programmer,,,"Java,Python,JavaScript,C++,C,TCP/IP,SQL,NoSQL,Linux,Git,HTML/CSS,Docker,Allure,Selenium,Unit,Power BI,Tableau,Amplitude,ANNs,GAN",,"Программист с нуля до Junior
Станьте востребованным инженером-программистом и получите одну из самых востребованных профессий в IT. Вы изучите основы программирования и основные концепции компьютерных наук, цифровые технологии, программное обеспечение, операционные системы, базы данных, системы аналитики, языки программирования и многое другое. Вы так же познакомитесь с тестированием и системным анализом информационных технологий. На программе сможете сделать осознанный выбор специализации и технологий, прокачаться в выбранном направлении.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.
Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.
Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.
Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.
Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.
Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.
Специализация Программист
7 месяцев

Курсы
Знакомство с языком Python
Java: знакомство и как пользоваться базовым API
Объектно-ориентированное программирование (ООП)
Операционные системы и виртуализация (Linux)
База данных и SQL
Алгоритм и структуры данных
Исключения в программировании и их обработка
Промежуточная аттестация
Архитектура ПО
Контейнеризация
Сборка проектов и деплой, CI/CD
Парадигмы программирования и языки парадигм
Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти
Знакомство с веб-технологиями
вне четверти
Компьютерные сети
вне четверти
Контроль версий Углубленно (Git)
вне четверти
Итоговая аттестация"
6277,Программист Java Мастер,https://gb.ru/geek_university/developer/programmer/java/master,"Java-разработчик занимается разработкой высоконагруженных систем, веб-сервисов, банковских и корпоративных приложений, которыми пользуются люди по всему миру, Программирование",Backend,"Java,SQL,NoSQL,Spring,Ethernet,Linux,Git,LibGDX,HTML/CSS",Middle,"Java-разработчик с нуля до Middle
Пройдите обучение на инженера-программиста на Java. Вы получите базовые знания алгоритмы, на практике освоите язык Java и сможете создавать универсальные программы для большинства современных платформ: сетевые чаты, приложения, мобильные игры и другие сервисы. После 9 месяцев обучения вы сможете трудоустроиться. В пакете Мастер вы получаете возможность углубленно изучить технологическую специализацию с экспертной поддержкой.","Введение в программирование
Расскажем, как спланировать обучение, чтобы сохранить интерес, получить максимум пользы и всё успеть.

Введение в контроль версий + Практикум
Вы освоите все ключевые операции в системе: создание и клонирование репозитория, слияние веток, запрос истории изменений и многое другое. Курс приблизит вас к прохождению собеседования, где несколько вопросов обычно посвящены системе контроля версий.

Знакомство с языками программирования + Практикум
Познакомитесь с языками программирования: функциями и массивами, рекурсиями и двумерными массивами. Узнаете, как нужно писать код.

Знакомство с базами данных
Познакомитесь с понятием «базы данных», разберетесь с их видами и основными подходами к работе с данными. Узнаете методы проектирования баз данных, а также способы модификации их структуры.

Итоги блока. Выбор специализации
Изучите колесо компетенций и матрицу Декарта. Познакомитесь со специализациями и выберете дальнейшее направление развития.

Математика и информатика для программистов. Видеокурс
Дополнительный курс, в котором вы восполните необходимые базовые знания по математике. Курс позволит облегчить вхождение в профессию.

Специализация Программист
7 месяцев
Знакомство с языком Python
Java: знакомство и как пользоваться базовым API
Объектно-ориентированное программирование (ООП)
Операционные системы и виртуализация (Linux)
База данных и SQL
Алгоритм и структуры данных
Исключения в программировании и их обработка
Промежуточная аттестация
Архитектура ПО
Контейнеризация
Сборка проектов и деплой, CI/CD
Парадигмы программирования и языки парадигм
Гибкие методологии (Agile, SCRUM, Kanban и другие)
вне четверти

Знакомство с веб-технологиями
вне четверти

Компьютерные сети
вне четверти

Контроль версий Углубленно (Git)
вне четверти

Итоговая аттестация
Технологическая специализация
3 месяца
Java Core
Java Development Kit
Java Junior
Java Junior+
Фреймворк Spring"